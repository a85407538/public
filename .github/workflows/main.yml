name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Inject API Key into config.js
        run: |
          mkdir -p scripts
          cat > scripts/config.js << 'EOF'
          // Configuration file - Generated during deployment
          // ⚠️ WARNING: This file is publicly accessible on GitHub Pages
          const CONFIG = {
              apiKey: '${{ secrets.GEMINI_API_KEY }}',
              apiUrl: 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent'
          };
          
          // Export for module usage
          if (typeof module !== 'undefined' && module.exports) {
              module.exports = CONFIG;
          }
          EOF
          
      - name: Verify config.js was created
        run: |
          if [ -f scripts/config.js ]; then
            echo "✅ config.js created successfully"
            echo "File size: $(wc -c < scripts/config.js) bytes"
          else
            echo "❌ config.js not found!"
            exit 1
          fi
      
      - name: List files to be deployed
        run: |
          echo "📦 Files that will be deployed:"
          ls -lahR
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Display deployment URL
        run: |
          echo "🚀 Deployment successful!"
          echo "🌐 Your site is live at: ${{ steps.deployment.outputs.page_url }}"
